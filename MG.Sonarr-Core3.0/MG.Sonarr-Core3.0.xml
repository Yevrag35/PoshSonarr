<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MG.Sonarr-Core3.0</name>
    </assembly>
    <members>
        <member name="T:MG.Sonarr.Cmdlets.BasePostCommandCmdlet">
            <summary>
            A base PowerShell <see cref="T:System.Management.Automation.PSCmdlet"/> class that provides functionality for posting commands to Sonarr.
            </summary>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BasePostCommandCmdlet.ProcessRequest(System.Collections.IDictionary)">
            <summary>
            Takes in a generic dictionary of parameters and issues a command to Sonarr with the dictionary as its payload.
            </summary>
            <param name="parameterDict">The set of parameters to build the POST body with,</param>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.BaseSonarrCmdlet">
            <summary>
            The main base <see cref="T:System.Management.Automation.PSCmdlet"/> class for all PoshSonarr cmdlets.  Includes custom API methods along with advanced error-handling.
            </summary>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TrySonarrConnect">
            <summary>
            Sends a GET request to the specified Sonarr endpoint and returning a JSON-formatted string in response.  This is for exclusive use with <see cref="T:MG.Sonarr.Cmdlets.ConnectInstance"/>.  
            Errors are handled by <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError.
            </summary>
            <exception cref="T:System.Exception"/>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryDeleteSonarrResult(System.String)">
            <summary>
            Sends a DELETE request to the specified Sonarr endpoint.  Errors are handled by <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError.
            </summary>
            <param name="endpoint">The Sonarr API endpoint to send the DELETE request to.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryGetSonarrResult(System.String)">
            <summary>
            Sends a GET request to the specified Sonarr endpoint returning a JSON-formatted string in response.  
            Errors are handled by <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError.
            </summary>
            <param name="endpoint">The Sonarr API endpoint to send the GET request to.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryPostSonarrResult(System.String,System.String)">
            <summary>
            Sends a POST request to the specified Sonarr endpoint with the specified string payload formatted in JSON 
            returning a JSON-formatted string in response.  Errors are handled by <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError.
            </summary>
            <param name="endpoint">The Sonarr API endpoint to send the POST request to.</param>
            <param name="jsonBody">The JSON payload content to be sent with the POST request.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryPutSonarrResult(System.String,System.String)">
            <summary>
            Sends a PUT request to the specified Sonarr endpoint with the specified string payload formatted in JSON 
            returning a JSON-formatted string in response.  Errors are handled by <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError.
            </summary>
            <param name="endpoint">The Sonarr API endpoint to send the PUT request to.</param>
            <param name="jsonBody">The JSON payload content to be sent with the PUT request.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.GetAbsoluteException(System.Exception)">
            <summary>
            Takes in an <see cref="T:System.Exception"/> and returns the innermost <see cref="T:System.Exception"/> as a result.
            </summary>
            <param name="e">The exception to pull the innermost <see cref="T:System.Exception"/> from.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.WriteError(System.String,System.Management.Automation.ErrorCategory)">
            <summary>
            Issues a <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError from a given string message and <see cref="T:System.Management.Automation.ErrorCategory"/>.
            </summary>
            <param name="message">The exception message to be displayed in the <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
            <param name="category">The category of the error.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.WriteError(System.String,System.Management.Automation.ErrorCategory,System.Object)">
            <summary>
            Issues a <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError from a given string message, <see cref="T:System.Management.Automation.ErrorCategory"/>, and Target Object.
            </summary>
            <param name="message">The exception message to be displayed in the <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
            <param name="category">The category of the error.</param>
            <param name="targetObject">The object used as the 'targetObject' in an <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.WriteError(System.String,System.Exception,System.Management.Automation.ErrorCategory,System.Object)">
            <summary>
            /// Issues a <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError from a given string message, base <see cref="T:System.Exception"/>, <see cref="T:System.Management.Automation.ErrorCategory"/>, and Target Object.
            </summary>
            <param name="message">The exception message to be displayed in the <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
            <param name="exception">The exception whose InnerException will be become the InnerException of the <see cref="T:System.Management.Automation.ErrorRecord"/> and its type will be used as the FullyQualifiedErrorId.</param>
            <param name="category">The category of the error.</param>
            <param name="targetObject">The object used as the 'targetObject' in an <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.WriteError(System.Exception,System.Management.Automation.ErrorCategory)">
            <summary>
            Issues a <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError from a given base exception and <see cref="T:System.Management.Automation.ErrorCategory"/>.
            </summary>
            <param name="baseException">The base exception will be become the InnerException of the <see cref="T:System.Management.Automation.ErrorRecord"/> and its type will be used as the FullyQualifiedErrorId.</param>
            <param name="category"></param>
        </member>
        <member name="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.WriteError(System.Exception,System.Management.Automation.ErrorCategory,System.Object)">
            <summary>
            Issues a <see cref="T:System.Management.Automation.PSCmdlet"/>.WriteError from a base <see cref="T:System.Exception"/>, <see cref="T:System.Management.Automation.ErrorCategory"/>, and Target Object.
            </summary>
            <param name="message">The exception message to be displayed in the <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
            <param name="baseException">The base exception will be become the InnerException of the <see cref="T:System.Management.Automation.ErrorRecord"/> and its type will be used as the FullyQualifiedErrorId.</param>
            <param name="category">The category of the error.</param>
            <param name="targetObject">The object used as the 'targetObject' in an <see cref="T:System.Management.Automation.ErrorRecord"/>.</param>
        </member>
        <member name="F:MG.Sonarr.Cmdlets.GetCalendar.StartDate">
            <summary>
                <para type="description">The start date to retrieve calendar entries from.</para>
            </summary>
        </member>
        <member name="F:MG.Sonarr.Cmdlets.GetCalendar.EndDate">
            <summary>
            <para type="description">The end date to retrieve calendar entries from.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.GetCalendar.DayOfWeek">
            <summary>
            <para type="description">Specifies the DayOfWeeks to get entries in the specified date range.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.GetCalendar.SeriesTitle">
            <summary>
            <para type="description">Return only the specified series from the calendar.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.GetCommand.JobId">
            <summary>
            <para type="description">The job id(s) of the command(s) to retrieves their statuses.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.Commands.InvokeEpisodeSearch">
            <summary>
            <para type="synopsis">Instructs Sonarr to perform an episode search.</para>
            <para type="description">Tells SOnarr to perform an episode search for the given episodes.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeEpisodeSearch.EpisodeId">
            <summary>
            <para type="description">The episode id(s) retrieved from 'Get-SonarrEpisode'.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeEpisodeSearch.Force">
            <summary>
            <para type="description">Specify to bypass confirmation prompts.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.Commands.InvokeRssSync">
            <summary>
            <para type="synopsis">Execute an RSS sync.</para>
            <para type="description">Instructs to perform an RSS sync on all specified RSS feeds.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.Commands.InvokeSeasonSearch">
            <summary>
            <para type="synopsis">Executes a season search.</para>
            <para type="description">Instructs Sonarr to perform a season search for the specified series and, optionally, a given season number.
                If a season number is not specified, all seasons will be searched.
            </para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeSeasonSearch.SeriesId">
            <summary>
            <para type="description">The ID of the series to perform the search on.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeSeasonSearch.SeasonNumber">
            <summary>
            <para type="description">The optional season number to perform the search on.  By default, all seasons are searched.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeSeasonSearch.Force">
            <summary>
            <para type="description">Specifies to bypass the confirmation prompt.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.Commands.InvokeSeriesSearch">
            <summary>
            <para type="synopsis">Executes a series search.</para>
            <para type="description">Instructs Sonarr to perform a series search for the specified seriesID.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeSeriesSearch.SeriesId">
            <summary>
            <para type="description">The series ID to perform the series search on.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Commands.InvokeSeriesSearch.Force">
            <summary>
            <para type="description">Specifies to bypass the confirmation prompt.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.InvokeSeriesRefresh">
            <summary>
            <para type="synopsis">Execute a series refresh.</para>
            <para type="description">Instructs Sonarr to perform a series refresh for either all series or a specified series by ID.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.InvokeSeriesRefresh.SeriesId">
            <summary>
            <para type="description">THe optional series ID to perform the refresh on.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.InvokeSeriesRefresh.Force">
            <summary>
            <para type="description">Specifies to bypass the confirmation prompt.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.InvokeSeriesRescan">
            <summary>
            <para type="synopsis">Executes a series rescan.</para>
            <para type="description">Instructs Sonarr to perform a series rescan on all series or a specified series by its ID.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.InvokeSeriesRescan.SeriesId">
            <summary>
            <para type="description">The optional series ID to perform the rescan on.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.InvokeSeriesRescan.Force">
            <summary>
            <para type="description">Specifies to bypass the confirmation prompt.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.ConnectInstance">
            <summary>
                <para type="synopsis">Builds the connection context for subsequent cmdlets.</para>
                <para type="description">Establishes a custom HttpClient context for use with all subsequent PoshSonarr cmdlets.  
                    The connection is created either via hostname/port/url base or by direct URL.  
                    The "/api" path is automatically appended unless the '-NoApiPrefix' parameter is used.  
                    If this command is not run first, all other cmdlets will throw an error.
                </para>
            </summary>
            <example>
                <code>
                    <para>Connect by 'HostName' and 'Port':</para>
                    <para></para>
                    <para>Connect-Sonarr -Server "MEDIASERVER" -ApiKey "xxxxxxxxxxxxxxxx" -PassThru</para>
                </code>
            </example>
            <example>
                <code>
                    <para>Connect by explicit URL:</para>
                    <para></para>
                    <para>Connect-SonarrInstance -Url 'https://sonarr-api.cloud.com/api/custom' -ApiKey "xxxxxxxxxxxxxxxx" -NoApiPrefix</para>
                </code>
            </example>
        </member>
        <member name="F:MG.Sonarr.Cmdlets.ConnectInstance.SonarrServerName">
            <summary>
            <para type="description">The hostname of the Sonarr instance.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.SonarrUrl">
            <summary>
            <para type="description">Specifies the direct URL to the Sonarr instance; including any reverse proxy bases.  
            The "/api" path is automatically appended unless the '-NoApiPrefix' parameter is used.</para>
            </summary>
        </member>
        <member name="F:MG.Sonarr.Cmdlets.ConnectInstance.PortNumber">
            <summary>
            <para type="description">The port number for the Sonarr website.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.ReverseProxyUriBase">
            <summary>
            <para type="description">Specifies a custom URL base for use with reverse proxies.  
            If you don't use a reverse proxy with Sonarr, then you don't need this parameter :)</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.UseSSL">
            <summary>
            <para type="description">Indicates that connection should establish over an SSL connection when using the "ByServerName" parameter set.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.SkipCertificateCheck">
            <summary>
            <para type="description">Specifies the HttpClient to ignore any certificate errors that may occur.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.AllowRedirects">
            <summary>
            <para type="description">Specifies the HttpClient to follow any HTTP redirects.  See the wiki article for more information: https://github.com/Yevrag35/PoshSonarr/wiki/Reverse-Proxy-Information</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.Proxy">
            <summary>
            <para type="description">Specifies a proxy URL that HttpClient must use.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.ProxyCredential">
            <summary>
            <para type="description">Specifies a set of credentials in order to access the proxy.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.ProxyBypassOnLocal">
            <summary>
            <para type="description">Indicates that the proxy should be used on local connections.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.ApiKey">
            <summary>
            <para type="description">The API key to use for authentication.  The key is 32, all lower-case, alphanumeric characters.  
            The key can be retrieved from your Sonarr website (Settings => General => Security), or in the "Config.xml" file in the AppData directory.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.NoApiPrefix">
            <summary>
            <para type="description">Indicates that all API requests should not append '/api' to the end of the URL path.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.ConnectInstance.PassThru">
            <summary>
            <para type="description">Passes through the connection testing the "/system/status" endpoint.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.GetDownloadClient">
            <summary>
            <para type="synopsis">Gets any download client in Sonarr.</para>
            <para type="description">Retrieves any/all of the download clients that have been created in Sonarr.</para>
            <para type="description">By default, all clients are returned.</para>
            <para type="description">You optionally specify to return clients by their download protocol or their ID's.</para>
            </summary>
            <example>
                <code>Get-SonarrDownloadClient Torrent</code>
            </example>
            <example>
                <code>Get-SonarrDownloadClient -Protocol Usenet, Torrent</code>
            </example>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.GetDownloadClient.Protocol">
            <summary>
            <para type="description">Specifies to only retrive download clients whose download protocol match the given value(s).</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.GetDownloadClient.Id">
            <summary>
            <para type="description">Retrieve the download client by their IDs.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Cmdlets.Releases.AddRelease">
            <summary>
                <para type="synopsis">Adds a release to be sent to a download client.</para>
                <para type="description">
                    Takes a given release url and indicates to Sonarr that it should be downloaded.
                </para>
            </summary>
            <example>
                <para>Add from pipeline input</para>
                <code>Get-SonarrSeries veep | Get-SonarrEpisode -EpisodeIdentifier "s1e7" | Search-SonarrRelease | Add-SonarrRelease</code>
            </example>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Releases.AddRelease.ReleaseUrl">
            <summary>
            <para type="description">The url for the release to add.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Releases.AddRelease.IndexerId">
            <summary>
            <para type="description">The id for the indexer that release came from.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Cmdlets.Releases.AddRelease.PassThru">
            <summary>
                <para type="description">Passes through the Release object to show the result.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.BaseSonarrHttpException">
            <summary>
            The <see cref="T:System.Exception"/> base class for all Sonarr exceptions.
            </summary>
        </member>
        <member name="P:MG.Sonarr.BaseSonarrHttpException.Caller">
            <summary>
            A copy of the current context's <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.BaseSonarrHttpException.RequestMethod">
            <summary>
            The request method that caused this exception to be thrown.
            </summary>
        </member>
        <member name="P:MG.Sonarr.BaseSonarrHttpException.Url">
            <summary>
            The API url from the offending <see cref="T:System.Net.Http.HttpRequestException"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.InvalidApiKeyException">
            <summary>
            The exception that is thrown when an invalid <see cref="T:MG.Sonarr.ApiKey"/> is supplied to <see cref="T:MG.Sonarr.Cmdlets.ConnectInstance"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.NoSonarrResponseException">
            <summary>
            The exception that is thrown when the "-PassThru" parameter is specified on the <see cref="T:MG.Sonarr.Cmdlets.ConnectInstance"/> cmdlet and no response was received from the Sonarr server.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrConnectException">
            <summary>
            The exception thrown when an HttpRequestException is thrown during the processing of the <see cref="T:MG.Sonarr.Cmdlets.ConnectInstance"/> cmdlet.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrContextNotSetException">
            <summary>
            The exception thrown when any PoshSonarr cmdlet (other than <see cref="T:MG.Sonarr.Cmdlets.ConnectInstance"/>) is attempted before the <see cref="T:MG.Sonarr.Context"/> is set.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrGetRequestException">
            <summary>
            The exception that is thrown when <see cref="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryGetSonarrResult(System.String)"/> encounters an <see cref="T:System.Net.Http.HttpRequestException"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrDeleteRequestException">
            <summary>
            The exception that is thrown when <see cref="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryDeleteSonarrResult(System.String)"/> encounters an <see cref="T:System.Net.Http.HttpRequestException"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrPostRequestException">
            <summary>
            The exception that is thrown when <see cref="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryPostSonarrResult(System.String,System.String)"/> encounters an <see cref="T:System.Net.Http.HttpRequestException"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrPutRequestException">
            <summary>
            The exception that is thrown when <see cref="M:MG.Sonarr.Cmdlets.BaseSonarrCmdlet.TryPutSonarrResult(System.String,System.String)"/> encounters an <see cref="T:System.Net.Http.HttpRequestException"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Context.ApiCaller">
            <summary>
            The main <see cref="T:System.Net.Http.HttpClient"/> from which all PoshSonarr cmdlets issue their API requests.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Context.IsConnected">
            <summary>
            Returns true when <see cref="P:MG.Sonarr.Context.ApiCaller"/> is not null, has a base address, and contains a valid API key header.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Context.UriBase">
            <summary>
            Specifies the additional base uri that <see cref="P:MG.Sonarr.Context.ApiCaller"/> appends on its API operations.  
            A single forward slash ("/") will be interpreted as <see cref="F:System.String.Empty"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.SonarrHttp">
            <summary>
            A static class providing conversion methods from <see cref="T:Newtonsoft.Json.Linq.JToken"/> and <see cref="T:System.String"/> objects to objects that inherit from <see cref="T:MG.Sonarr.ISonarrResult"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.BaseEpisodeResult">
            <summary>
            The base class for all Episode-related response data from Sonarr.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.BaseResult">
            <summary>
            The base class for all PoshSonarr API request responses.
            </summary>
        </member>
        <member name="M:MG.Sonarr.Results.BaseResult.ToJson">
            <summary>
            Converts the inheriting class to a JSON-formatted string using programmed serializers.
            </summary>
        </member>
        <member name="M:MG.Sonarr.Results.BaseResult.ToJson(System.Collections.IDictionary)">
            <summary>
            Converts the inheriting class to a JSON-formatted string using programmed serializers adding in the contents from the specified generic dictionary.
            </summary>
            <param name="parameters">The dictionary that will have it contents added to resulting JSON string.</param>
        </member>
        <member name="T:MG.Sonarr.Results.CommandOutput">
            <summary>
            The class defining a response from the "/command" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.EpisodeResult">
            <summary>
            The class defining a response from the "/episode" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.EpisodeFile">
            <summary>
            The class defining a response from the "/episodefile" endpoint.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.DateAdded">
            <summary>
            The date in which this <see cref="T:MG.Sonarr.Results.EpisodeFile"/> was added to the database.  This can be null.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.EpisodeFileId">
            <summary>
            The of ID of the <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.MediaInfo">
            <summary>
            The media details of the <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.OriginalFilePath">
            <summary>
            The name (path) of the file downloaded.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.Path">
            <summary>
            The current path of this <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.Quality">
            <summary>
            The quality details of the <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.QualityCutoffNotMet">
            <summary>
            Indicates the current version of the <see cref="T:MG.Sonarr.Results.EpisodeFile"/> does not meet the specified quality standards, and can be replaced when one is found.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.RelativePath">
            <summary>
            The relative path of the <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.SeriesId">
            <summary>
            The series ID that the <see cref="T:MG.Sonarr.Results.EpisodeResult"/> of the <see cref="T:MG.Sonarr.Results.EpisodeFile"/> is apart of.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.SeasonNumber">
            <summary>
            The season number for this <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFile.Size">
            <summary>
            The episode file size in bytes.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.EpisodeFileQuality">
            <summary>
            The class defining the quality of a specific <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFileQuality.Quality">
            <summary>
            The details of this Quality class of the specified <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.EpisodeFileQuality.Revision">
            <summary>
            Represents revision details about the Quality of the specified <see cref="T:MG.Sonarr.Results.EpisodeFile"/>.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.FileSystem">
            <summary>
            <para type="description">Represents a response object from "/filesystem".</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.SonarrDirectory">
            <summary>
            <para type="description">Represents a repsonse object from a "/filesystem" request as an individual directory result.</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.MediaFile">
            <summary>
            <para type="description">Represents a response object from "/filesystem/mediaFiles".</para>
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.QualityProfile">
            <summary>
            The class that defines a response from the "/profile" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.QueueItem">
            <summary>
            The class that defines the response from the "/queue" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.Release">
            <summary>
            The class that defines a response from the "/release" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.RootFolder">
            <summary>
            The class that defines a response from the "/rootfolder" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.SeriesResult">
            <summary>
            The class that defines a response from the "/series" or "/series/lookup" endpoints.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.SeriesImage">
            <summary>
            The class that defines a response from the "/MediaCover" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.SonarrBackupResult">
            <summary>
            The class that defines a response from the "/system/backup" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.SonarrDiskspaceResult">
            <summary>
            The class that defines a response from the "/diskspace" endpoint.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.SonarrDiskspaceResult.FreeSpace">
            <summary>
            The amount of freespace left in the disk calculated in bytes.
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.SonarrDiskspaceResult.TotalSpace">
            <summary>
            The total space of the disk in bytes.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.SonarrStatusResult">
            <summary>
            <para type="description">The class that defines a response from the "/system/status" endpoint.</para>
            </summary>
        </member>
        <member name="P:MG.Sonarr.Results.SonarrStatusResult.UrlBase">
            <summary>
            The specified url base used for reverse proxy purposes.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.Tag">
            <summary>
            The class that defines a response from the "/tag" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.Results.Update">
            <summary>
            The class that defines a response from the "/update" endpoint.
            </summary>
        </member>
        <member name="T:MG.Sonarr.ApiKey">
            <summary>
            A validator class to verify a string or <see cref="T:System.Security.SecureString"/> can become an appropriate API key for use with Sonarr.
            </summary>
        </member>
        <member name="P:MG.Sonarr.ApiKey.Key">
            <summary>
            The API key in its string form.
            </summary>
        </member>
        <member name="M:MG.Sonarr.ApiKey.AsKeyValuePair">
            <summary>
            Transforms the string API key into a key value pair for use as a HTTP header.  The 'key' of the key value pair will always be 'X-Api-Key'.
            </summary>
        </member>
        <member name="M:MG.Sonarr.ApiKey.ConvertFromSecureString(System.Security.SecureString)">
            <summary>
            Converts a given <see cref="T:System.Security.SecureString"/> into its plain-text string form.
            </summary>
            <param name="ss">The <see cref="T:System.Security.SecureString"/> to decrypt.</param>
            <returns></returns>
        </member>
        <member name="M:MG.Sonarr.ApiKey.IsValidKey(System.String)">
            <summary>
            Tests a given <see cref="T:System.String"/> against a Regex pattern to verify it is 32 characters in length and only consists of lowercase characters.
            </summary>
            <param name="testStr">The string to validate.</param>
            <returns></returns>
        </member>
        <member name="T:MG.Sonarr.ISonarrResult">
            <summary>
            An interface providing "Class to JSON-string" methods.
            </summary>
        </member>
        <member name="T:MG.Sonarr.ProxyCredential">
            <summary>
            A mock <see cref="T:System.Net.NetworkCredential"/> class that can implicitly convert <see cref="T:System.Management.Automation.PSCredential"/> to <see cref="T:System.Net.ICredentials"/>.
            </summary>
        </member>
    </members>
</doc>
